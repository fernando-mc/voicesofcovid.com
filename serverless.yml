org: fernandomcsea
app: voicesofcovid
service: voicesofcovid

provider:
  name: aws
  profile: fernando
  region: us-west-2
  runtime: python3.7
  environment:
    GOOGLE_RECAPTCHA_TOKEN: ${param:GOOGLE_RECAPTCHA_TOKEN}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createVoice:
    handler: backend/create_voice.handler
    events:
      - http:
          path: voice
          method: post
          cors: true
          request:
            schema:
              application/json: ${file(./backend/voice.model.json)}

resources:
  Resources:
    TechSalaries:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain # Keeps around the DynamoDB resource when we redeploy/destroy
      Properties:
        AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

package:
  exclude:
    - site/**
    - venv/**
    - node_modules/**

plugins:
  - serverless-finch
  - serverless-python-requirements

custom:
  client:
    bucketName: voicesofcovid.com
    distributionFolder: site
